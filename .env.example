# 服务器配置
# PORT: 应用服务器监听的端口号
# 类型: 整数
# 建议: 使用非标准端口(如3000)以避免与其他服务冲突
PORT=3000

# GIN_MODE: Gin框架的运行模式
# 类型: 字符串
# 可选值: debug(调试模式,提供详细日志)或release(生产模式,优化性能)
# 建议: 开发环境使用debug,生产环境使用release
GIN_MODE=debug

# APP_VERSION: 应用程序版本号
# 类型: 字符串(语义化版本号)
# 格式: 主版本.次版本.修订号(如1.0.0)
APP_VERSION=1.0.0

# Redis配置
# REDIS_ADDR: Redis服务器地址和端口
# 类型: 字符串
# 格式: host:port
# 示例: localhost:6379, redis-server:6379
REDIS_ADDR=localhost:6379

# REDIS_PASSWORD: Redis服务器访问密码
# 类型: 字符串
# 建议: 生产环境中设置强密码
# 注意: 留空表示无密码
REDIS_PASSWORD=

# API Keys (第三方服务)
# WHOISFREAKS_API_KEY: WhoisFreaks API服务的访问密钥
# 类型: 字符串
# 获取方式: 在WhoisFreaks官网(https://whoisfreaks.com/)注册并获取API密钥
# 用途: 用于查询域名WHOIS信息
WHOISFREAKS_API_KEY=your_whoisfreaks_api_key_here

# WHOISXML_API_KEY: WhoisXML API服务的访问密钥
# 类型: 字符串
# 获取方式: 在WhoisXML官网(https://whoisxmlapi.com/)注册并获取API密钥
# 用途: 作为备选服务提供商,用于查询域名WHOIS信息
WHOISXML_API_KEY=your_whoisxml_api_key_here

# 安全配置
# JWT_SECRET: JSON Web Token的签名密钥
# 类型: 字符串
# 用途: 用于生成和验证JWT令牌,保护API访问安全
# 建议: 使用至少32字符的随机字符串
# 安全要求: 必须保密,泄露会导致身份验证被破解
# 生成方法: 可使用`openssl rand -base64 32`命令生成
JWT_SECRET=your_jwt_secret_here