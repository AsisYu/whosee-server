# 开发环境 Docker Compose 配置
version: '3.8'

services:
  # Redis服务
  redis:
    image: redis:7-alpine
    container_name: whosee-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    networks:
      - whosee-dev-network

  # Whosee服务器（开发模式）
  whosee-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: whosee-server-dev
    restart: unless-stopped
    ports:
      - "3900:3900"
    environment:
      # 开发环境配置
      - PORT=3900
      - GIN_MODE=debug

      # Redis配置
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=

      # API密钥配置（开发环境）
      - WHOISXML_API_KEY=${WHOISXML_API_KEY}
      - WHOISFREAKS_API_KEY=${WHOISFREAKS_API_KEY}
      - API_KEY=dev_api_key_12345
      - JWT_SECRET=dev_jwt_secret_12345

      # 安全配置（开发环境宽松设置）
      - DISABLE_API_SECURITY=true
      - IP_WHITELIST_STRICT_MODE=false
      - API_DEV_MODE=true
      - TRUSTED_IPS=

      # Chrome配置
      - CHROME_MODE=auto

      # 健康检查配置
      - HEALTH_CHECK_INTERVAL_DAYS=1
      - HEALTH_LOG_SEPARATE=true
      - HEALTH_LOG_SILENT=false
    volumes:
      # 开发时源码映射（热重载）
      - .:/app
      # 日志
      - ./logs:/app/logs
      # 静态文件
      - ./static:/app/static
    depends_on:
      - redis
    networks:
      - whosee-dev-network

volumes:
  redis_dev_data:
    driver: local

networks:
  whosee-dev-network:
    driver: bridge